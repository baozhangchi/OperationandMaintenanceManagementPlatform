@layout TelerikLayout
@using OMMP.WebClient.Models
@inherits LayoutComponentBase

<PageTitle>OMMP.WebClient</PageTitle>
<CascadingValue TValue="string" IsFixed="false" Value="@ClientId" Name="ClientId">
    
    <TelerikAppBar>
        <AppBarSection>
            <TelerikButton FillMode="flat" Icon="@SvgIcon.Menu" OnClick="@ToggleDrawerExpanded"></TelerikButton>
        </AppBarSection>

        <AppBarSpacer Size="4px"/>

        <AppBarSection>
            <h1 class="title">My Telerik UI for Blazor Account</h1>
        </AppBarSection>

        <AppBarSpacer Size="50px"/>

        <AppBarSection>
            <span>Release history</span>
        </AppBarSection>

        <AppBarSection>
            <span>Documentation</span>
        </AppBarSection>

        <AppBarSection>
            <span>Contact us</span>
        </AppBarSection>

        <AppBarSpacer/>

        <AppBarSection>
            <TelerikTextBox Placeholder="Search"></TelerikTextBox>
        </AppBarSection>

        <AppBarSection>
            <TelerikSvgIcon Icon="@SvgIcon.Bell"></TelerikSvgIcon>
        </AppBarSection>

        <AppBarSeparator/>

        <AppBarSection>
            <TelerikSvgIcon Icon="@SvgIcon.Logout"></TelerikSvgIcon>
        </AppBarSection>

    </TelerikAppBar>
    <TelerikDrawer TItem="DrawerItem" @ref="Drawer"
                   Expanded="@Expanded"
                   ExpandedChanged="((bool newValue) => ExpandedChangedHandler(newValue))"
                   Width="190px" Data="Data" Mode="DrawerMode.Push" Position="DrawerPosition.Start" MiniMode="true">
        <DrawerContent>
            @Body
        </DrawerContent>
    </TelerikDrawer>
</CascadingValue>

@code{
    string? ClientId { get; }
    private bool Expanded { get; set; }
    TelerikDrawer<DrawerItem> Drawer { get; set; }
    IEnumerable<DrawerItem> Data =>
        new List<DrawerItem>
        {
            new DrawerItem{ Text = "Drawer_Team", Icon = SvgIcon.Grid, Url="/", Group = "home"},
            new DrawerItem{ Text = "Drawer_Dashboard", Icon = SvgIcon.ChartLineMarkers, Url="/sales", Group = "app"},
            new DrawerItem{ Text = "Drawer_Profile", Icon = SvgIcon.User, Url="/profile", Group = "app"},
            new DrawerItem{ Text = "Drawer_Info", Icon = SvgIcon.InfoCircle, Url="/information", Group = "ext"}
        };

    private async Task ToggleDrawerExpanded()
    {
        if (Expanded)
        {
            await Drawer.CollapseAsync();
        }
        else
        {
            await Drawer.ExpandAsync();
        }
    }

    async Task ExpandedChangedHandler(bool value)
    {
        Expanded = value;
        await Task.CompletedTask;
    }

}