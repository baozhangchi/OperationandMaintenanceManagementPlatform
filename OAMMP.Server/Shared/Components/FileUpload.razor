@inject MessageService MessageService
<InputUpload @ref="_uploader" TValue="string" Accept=".tar.gz" OnChange="@FileChange" OnDelete="@DeleteFile"></InputUpload>
<Stack IsRow="true" AlignItems="StackAlignItems.Center" Justify="StackJustifyContent.Center">
    <StackItem>
        <DialogSaveButton Text="确定" OnClick="@Confirm"></DialogSaveButton>
    </StackItem>
    <StackItem>
        <DialogCloseButton Text="取消" OnClick="@Cancel"></DialogCloseButton>
    </StackItem>
</Stack>

@code {

    [Parameter] public EventCallback<MultipartFormDataContent>? OnConfirmClick { get; set; }
    [Parameter] public EventCallback? OnCancelClick { get; set; }
    [Parameter] public string? Filter { get; set; }

    private async Task FileChange(UploadFile arg)
    {
        if (_uploader != null)
        {
            _file = arg.File;
            _uploader.ShowDeleteButton = true;
        }

        await Task.CompletedTask;
    }

    private InputUpload<string>? _uploader;
    private IBrowserFile? _file;

    private Task<bool> DeleteFile(UploadFile arg)
    {
        if (_uploader != null)
        {
            _uploader.ShowDeleteButton = false;
            _file = null;
        }

        return Task.FromResult(true);
    }

    private async Task Confirm()
    {
        if (_file == null)
        {
            await MessageService.Show(new MessageOption()
            {
                Content = "请先选择一个文件",
                Color = Color.Danger
            });
            return;
        }

        if (OnConfirmClick.HasValue)
        {
            var content = new MultipartFormDataContent();
            content.Add(content: new StreamContent(_file.OpenReadStream()), "\"files\"", _file.Name);
            await OnConfirmClick.Value.InvokeAsync(content);
        }
    }

    private async Task Cancel()
    {
        if (OnCancelClick.HasValue)
        {
            await OnCancelClick.Value.InvokeAsync();
        }
    }

}

<style>
    .bb_stack_item { margin: 5px }
</style>